// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineStore.Persistance;

namespace OnlineStore.Persistance.Migrations
{
    [DbContext(typeof(ProductsContext))]
    [Migration("20191106153803_ProductsInit")]
    partial class ProductsInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineStore.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<string>("Description");

                    b.Property<string>("PhotoUrl");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OnlineStore.Core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("InStock");

                    b.Property<double>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("OnlineStore.Core.Entities.ProductDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PhotoURL");

                    b.Property<Guid>("ProductId");

                    b.Property<string>("Size");

                    b.Property<string>("Tags");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("OnlineStore.Core.Entities.ProductReview", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Message");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("OnlineStore.Core.Entities.ProductDetails", b =>
                {
                    b.HasOne("OnlineStore.Core.Entities.Product", "Product")
                        .WithOne("ProductDetails")
                        .HasForeignKey("OnlineStore.Core.Entities.ProductDetails", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineStore.Core.Entities.ProductReview", b =>
                {
                    b.HasOne("OnlineStore.Core.Entities.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
